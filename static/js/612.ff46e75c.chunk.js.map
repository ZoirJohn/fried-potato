{"version":3,"file":"static/js/612.ff46e75c.chunk.js","mappings":"qLACA,QAA0B,yBAA1B,EAA0D,sBAA1D,EAA2F,0BAA3F,EAAgI,0BAAhI,EAAkK,uBAAlK,EAAiM,uB,cCEjM,MAIA,EAJcA,IACNC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYC,UAACH,EAAAA,EAAAA,KAAA,KAAGI,KAAK,IAAGD,SAAEJ,EAAMM,SCGvD,EAJcN,IACNC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBC,SAAEJ,EAAMO,O,4CCA9C,MAAMC,GAAUC,EAAAA,EAAAA,IAAU,IACpBC,GAAUC,EAAAA,EAAAA,IAAU,GAW1B,GAFwBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,kBAAjBD,EAPAZ,IAChBc,EAAAA,EAAAA,MAAA,QAAMC,SAAUf,EAAMgB,aAAaZ,SAAA,EACzCH,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAOC,SAAU,CAACZ,EAASE,GAAUJ,KAAK,oBAC5DL,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,cCYV,EAhBiBJ,IAEfc,EAAAA,EAAAA,MAAA,WAASZ,UAAWC,EAAeC,SAAA,EAClCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SAC1BJ,EAAMqB,SAASC,KAAIC,IAAKtB,EAAAA,EAAAA,KAACuB,EAAI,CAAClB,KAAMiB,EAAEjB,MAAWiB,EAAEE,WAGtDxB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SAC3BJ,EAAM0B,MAAMJ,KAAI,CAACK,EAAGF,KAAOxB,EAAAA,EAAAA,KAAC2B,EAAI,CAACrB,KAAMoB,EAAEE,SAAcJ,QAEzDxB,EAAAA,EAAAA,KAAC6B,EAAe,CAACf,SAAWgB,GAAa/B,EAAMgC,WAAWD,EAASE,qB,aCVtE,MAQA,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAREC,IACjB,CACNV,MAAOU,EAAMC,QAAQX,MACrBL,SAAUe,EAAMC,QAAQhB,SACxBiB,KAAMF,EAAME,KAAKC,gBAI6B,CAACP,WAAU,MAAIQ,EAAAA,EAAYC,EAAAA,EAA3E,CAA6FC,E","sources":["webpack://fried-potato/./src/css/Dialogs.module.css?a678","components/dialogs/DialogsUser.jsx","components/dialogs/DialogsModel.jsx","components/dialogs/DialogsForm.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__sGVYO\",\"item\":\"Dialogs_item__vjPzG\",\"chatTabs\":\"Dialogs_chatTabs__HLr3r\",\"contacts\":\"Dialogs_contacts__ttaqT\",\"names\":\"Dialogs_names__gLhkM\",\"chats\":\"Dialogs_chats__gxr2T\"};","import styles from '../../css/Dialogs.module.css';\r\n\r\n\r\nconst Item = (props) => {\r\n\treturn <li className={styles.item}><a href=\"#\">{props.name}</a></li>;\r\n};\r\n\r\nexport default Item;","import styles from '../../css/Dialogs.module.css';\r\n\r\n\r\nconst Text = (props) => {\r\n\treturn <p className={styles.chatTabs}>{props.text}</p>;\r\n};\r\n\r\nexport default Text;","import {maxLength, minLength} from '../../assets/Validators';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport Input from '../../assets/Input';\r\n\r\nconst maximum = maxLength(30);\r\nconst minimum = minLength(2);\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn <form onSubmit={props.handleSubmit}>\r\n\t\t<Field component={Input} validate={[maximum, minimum]} name=\"AddMessageForm\"/>\r\n\t\t<button>Send</button>\r\n\t</form>;\r\n};\r\n\r\nconst AddMessageRedux = reduxForm({form: 'AddMessageForm'})(AddMessageForm);\r\n\r\nexport default AddMessageRedux;","import styles from '../../css/Dialogs.module.css';\r\nimport Item from './DialogsUser';\r\nimport Text from './DialogsModel';\r\nimport AddMessageRedux from './DialogsForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\treturn (\r\n\t\t<section className={styles.dialogs}>\r\n\t\t\t<div className={styles.contacts}>\r\n\t\t\t\t<ul className={styles.names}>\r\n\t\t\t\t\t{props.contacts.map(i => <Item name={i.name} key={i.id}/>)}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.chats}>\r\n\t\t\t\t{props.texts.map((t, id) => <Text text={t.content} key={id}/>)}\r\n\t\t\t</div>\r\n\t\t\t<AddMessageRedux onSubmit={(formData) => props.addMessage(formData.AddMessageForm)}/>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Dialogs;","import {addMessage} from '../../redux/dialogs-reducer';\r\nimport {withRouter} from '../../hoc/withRouter';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttexts: state.dialogs.texts,\r\n\t\tcontacts: state.dialogs.contacts,\r\n\t\tauth: state.auth.isAuthorized,\r\n\t};\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, {addMessage}), withRouter, withAuthRedirect)(Dialogs);"],"names":["props","_jsx","className","styles","children","href","name","text","maximum","maxLength","minimum","minLength","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Input","validate","contacts","map","i","Item","id","texts","t","Text","content","AddMessageRedux","formData","addMessage","AddMessageForm","compose","connect","state","dialogs","auth","isAuthorized","withRouter","withAuthRedirect","Dialogs"],"sourceRoot":""}