{"version":3,"file":"static/js/176.b50a30e6.chunk.js","mappings":"uJACA,QAA0B,yBAA1B,EAA8D,0BAA9D,EAAsG,6BAAtG,EAA6I,yBAA7I,EAAoL,6B,+DCKpL,MAAMA,GAAUC,EAAAA,EAAAA,IAAU,IACpBC,GAAUC,EAAAA,EAAAA,IAAU,GAa1B,GAFwBC,EAAAA,EAAAA,GAAqB,CAAEC,KAAM,kBAA7BD,EATwCE,IAEpDC,EAAAA,EAAAA,MAAA,QAAMC,SAAUF,EAAMG,aAAaC,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAOC,SAAU,CAACf,EAASE,GAAUc,KAAK,oBAC5DL,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,c,cCH1B,MAAMO,EAAK,IAAIC,UAAU,gEAqCzB,GAAeC,EAAAA,EAAAA,IAnCoBb,IAC7B,MAAOc,EAAUC,IAAeC,EAAAA,EAAAA,UAAiF,IAUjH,OANAC,EAAAA,EAAAA,YAAU,KACJN,EAAGO,iBAAiB,WAAYC,IAC1BJ,GAAaK,GAAiB,IAAIA,KAAiBC,KAAKC,MAAMH,EAAEI,QAAO,GAC3E,GACL,IACHT,EAASU,OAAO,EAAG,KAEbvB,EAAAA,EAAAA,MAAA,WAASwB,UAAY,GAAEC,YAAyBtB,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAIoB,UAAWC,EAAgBtB,SACxBU,EAASa,KAAI,CAACC,EAASC,KAClB5B,EAAAA,EAAAA,MAAA,MAAawB,UAAWC,EAAmBtB,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKoB,UAAWC,EAAetB,UACzBC,EAAAA,EAAAA,KAAA,OAAKyB,IAAKF,EAAQG,OAASC,EAAcC,IAAI,oBAEnDhC,EAAAA,EAAAA,MAAA,OAAKwB,UAAWC,EAAmBtB,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,KAAAD,SAAIwB,EAAQA,WACZvB,EAAAA,EAAAA,KAAA,MAAAD,SAAKwB,EAAQM,gBANhBL,QAWrBxB,EAAAA,EAAAA,KAAC8B,EAAe,CACVjC,SAAWkC,IAzBRA,KACfzB,EAAG0B,KAAKD,EAAS,EAyBCE,CAAYF,EAASG,eAAe,MAG5C,G","sources":["webpack://fried-potato/./src/css/Dialogs.module.css?a678","components/dialogs/DialogsForm.tsx","components/dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__sGVYO\",\"messages\":\"Dialogs_messages__SG76E\",\"profileData\":\"Dialogs_profileData__4sg-t\",\"contact\":\"Dialogs_contact__QXMsT\",\"messageText\":\"Dialogs_messageText__cCX8G\"};","import { maxLength, minLength } from '../../assets/Validators'\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { Input } from '../../assets/Input'\r\nimport { IFormKeys } from './DialogsContainer'\r\nimport React from 'react'\r\n\r\nconst maximum = maxLength(30)\r\nconst minimum = minLength(2)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<IFormKeys>> = (props) => {\r\n      return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                  <Field component={Input} validate={[maximum, minimum]} name='AddMessageForm' />\r\n                  <button>Send</button>\r\n            </form>\r\n      )\r\n}\r\n\r\nconst AddMessageRedux = reduxForm<IFormKeys>({ form: 'AddMessageForm' })(AddMessageForm)\r\n\r\nexport default AddMessageRedux\r\n","import { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport styles from '../../css/Dialogs.module.css'\r\nimport AddMessageRedux from './DialogsForm'\r\nimport React, { useEffect, useState } from 'react'\r\nimport profilePhoto from '../../img/profile-user.webp'\r\n\r\ntype IProps = {}\r\nexport type IFormKeys = {\r\n      AddMessageForm: string\r\n}\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\nconst Dialogs: React.FC<IProps> = (props) => {\r\n      const [messages, setMessages] = useState<{ userId: number; userName: string; message: string; photo: string }[]>([])\r\n      const sendMessage = (formData: string) => {\r\n            ws.send(formData)\r\n      }\r\n      useEffect(() => {\r\n            ws.addEventListener('message', (e) => {\r\n                  setMessages((prevMessages) => [...prevMessages, ...JSON.parse(e.data)])\r\n            })\r\n      }, [])\r\n      messages.splice(0, 16)\r\n      return (\r\n            <section className={`${styles.dialogs} section`}>\r\n                  <ul className={styles.messages}>\r\n                        {messages.map((message, id) => (\r\n                              <li key={id} className={styles.profileData}>\r\n                                    <div className={styles.contact}>\r\n                                          <img src={message.photo || profilePhoto} alt='profilePhoto' />\r\n                                    </div>\r\n                                    <div className={styles.messageText}>\r\n                                          <p>{message.message}</p>\r\n                                          <h3>{message.userName}</h3>\r\n                                    </div>\r\n                              </li>\r\n                        ))}\r\n                  </ul>\r\n                  <AddMessageRedux\r\n                        onSubmit={(formData: IFormKeys) => {\r\n                              sendMessage(formData.AddMessageForm)\r\n                        }}\r\n                  />\r\n            </section>\r\n      )\r\n}\r\n\r\nexport default withAuthRedirect(Dialogs)\r\n"],"names":["maximum","maxLength","minimum","minLength","reduxForm","form","props","_jsxs","onSubmit","handleSubmit","children","_jsx","Field","component","Input","validate","name","ws","WebSocket","withAuthRedirect","messages","setMessages","useState","useEffect","addEventListener","e","prevMessages","JSON","parse","data","splice","className","styles","map","message","id","src","photo","profilePhoto","alt","userName","AddMessageRedux","formData","send","sendMessage","AddMessageForm"],"sourceRoot":""}