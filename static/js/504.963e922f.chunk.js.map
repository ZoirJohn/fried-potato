{"version":3,"file":"static/js/504.963e922f.chunk.js","mappings":"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","sources":["webpack://fried-potato/./src/css/Users.module.css?6c6f","components/users/UsersSearch.tsx","components/users/Users.tsx","components/users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Users_searchForm__EJ8CE\",\"searchFormInput\":\"Users_searchFormInput__k7JXX\",\"usersBox\":\"Users_usersBox__u6ZjL\",\"card\":\"Users_card__Mrn9A\",\"searchBox\":\"Users_searchBox__NRdem\"};","import { FC, memo } from 'react'\r\nimport { Field, Formik } from 'formik'\r\nimport styles from '../../css/Users.module.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { getFilter } from '../../selectors'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport { Tooltip, Button, Input } from 'antd'\r\n\r\nconst { Search } = Input\r\ntype TProps = {\r\n      setFilterSearch: (term: string, onlyFriends: null | boolean) => void\r\n}\r\n\r\nconst UsersSearch: FC<TProps> = memo((props) => {\r\n      const filter = useSelector(getFilter)\r\n      return (\r\n            <Formik\r\n                  enableReinitialize\r\n                  initialValues={{ name: filter.term, onlyFriends: String(filter.onlyFriends) }}\r\n                  onSubmit={(values, { setSubmitting }) => {\r\n                        if (values.onlyFriends === 'true') {\r\n                              props.setFilterSearch(values.name, true)\r\n                        } else if (values.onlyFriends === 'false') {\r\n                              props.setFilterSearch(values.name, false)\r\n                        } else {\r\n                              props.setFilterSearch(values.name, null)\r\n                        }\r\n                        setSubmitting(false)\r\n                  }}\r\n            >\r\n                  {({ values, handleChange, handleBlur, errors, handleSubmit, isSubmitting }) => (\r\n                        <form className={styles.searchForm} onSubmit={handleSubmit}>\r\n                              <div className={styles.searchBox}>\r\n                                    <Field type='text' name='name' onChange={handleChange} onBlur={handleBlur} value={values.name} className={styles.searchFormInput} />\r\n                                    <Tooltip title='search'>\r\n                                          <Button type='primary' shape='circle' icon={<SearchOutlined />} htmlType='submit' disabled={isSubmitting} />\r\n                                    </Tooltip>\r\n                              </div>\r\n\r\n                              <Field name='onlyFriends' as='select'>\r\n                                    <option value='null'>All</option>\r\n                                    <option value='true'>Only followed</option>\r\n                                    <option value='false'>Only unfollowed</option>\r\n                              </Field>\r\n                        </form>\r\n                  )}\r\n            </Formik>\r\n      )\r\n})\r\n\r\nexport default UsersSearch\r\n","import { NavLink, useLocation, useNavigate, useSearchParams } from 'react-router-dom'\r\nimport { FC, useEffect, useState } from 'react'\r\nimport { UserType } from '../../types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCurrentPage, getFilter, getInProgress, getOverall, getPageSize, getUsersList } from '../../selectors'\r\nimport { getUsersThunk } from '../../redux/users-reducer'\r\nimport { IDispatch } from '../../redux/store'\r\nimport { follow, unfollow } from '../../redux/users-reducer'\r\nimport styles from '../../css/Users.module.css'\r\nimport UsersSearch from './UsersSearch'\r\nimport { NumberParam, StringParam, useQueryParam } from 'use-query-params'\r\nimport { Col, Pagination, Row } from 'antd'\r\nimport { Button, Card, Flex, Typography, Grid, Tag } from 'antd'\r\nimport { wrap } from 'module'\r\n\r\ntype TProps = {}\r\n\r\nconst cardStyle: React.CSSProperties = {\r\n      width: '100%',\r\n}\r\n\r\nconst imgStyle: React.CSSProperties = {\r\n      display: 'block',\r\n      width: 73,\r\n}\r\nconst { useBreakpoint } = Grid\r\nconst Users: FC<TProps> = (props) => {\r\n      const users = useSelector(getUsersList)\r\n      const overall = useSelector(getOverall)\r\n      const pageSize = useSelector(getPageSize)\r\n      const currentPage = useSelector(getCurrentPage)\r\n      const filter = useSelector(getFilter)\r\n      const inProgress = useSelector(getInProgress)\r\n      const dispatch: IDispatch = useDispatch()\r\n      const navigate = useNavigate()\r\n      const [term, setTerm] = useQueryParam('term', StringParam)\r\n      const [friend, setFriend] = useQueryParam('friend', StringParam)\r\n      const [page, setPage] = useQueryParam('friend', NumberParam)\r\n      useEffect(() => {\r\n            const parsedObject = {\r\n                  term: term,\r\n                  onlyFriends: friend,\r\n                  page: page,\r\n            }\r\n            let actualPage = currentPage\r\n            let actualFilter = filter\r\n            if (!!parsedObject.page) {\r\n                  actualPage = Number(parsedObject.page)\r\n            }\r\n            if (!!parsedObject.term) {\r\n                  actualFilter = { ...actualFilter, term: parsedObject.term }\r\n            }\r\n            switch (parsedObject.onlyFriends) {\r\n                  case 'true':\r\n                        actualFilter = { ...actualFilter, onlyFriends: true }\r\n                        break\r\n                  case 'false':\r\n                        actualFilter = { ...actualFilter, onlyFriends: false }\r\n                        break\r\n                  case 'null':\r\n                        actualFilter = { ...actualFilter, onlyFriends: null }\r\n                        break\r\n            }\r\n            dispatch(getUsersThunk(actualPage, pageSize, actualFilter.term, actualFilter.onlyFriends))\r\n      }, [])\r\n      useEffect(() => {\r\n            navigate(`/users?term=${filter.term}&friend=${filter.onlyFriends}&page=${currentPage}`)\r\n      }, [filter, currentPage])\r\n      const setCurrentPageUsers = (page: number) => {\r\n            dispatch(getUsersThunk(page, pageSize, filter.term, filter.onlyFriends))\r\n      }\r\n      const setFilterSearch = (term: string, onlyFriends: boolean | null) => {\r\n            dispatch(getUsersThunk(1, pageSize, term, onlyFriends, true))\r\n      }\r\n      const followUser = (userId: number) => {\r\n            dispatch(follow(userId))\r\n      }\r\n      const unfollowUser = (userId: number) => {\r\n            dispatch(unfollow(userId))\r\n      }\r\n      return (\r\n            <Row className={`${styles.users} section`}>\r\n                  <Col span={12} sm={24} xs={24}>\r\n                        <Pagination defaultCurrent={1} total={overall} current={currentPage} onChange={setCurrentPageUsers} responsive />\r\n                  </Col>\r\n                  <Col span={12} sm={24} xs={24}>\r\n                        <UsersSearch setFilterSearch={setFilterSearch} />\r\n                  </Col>\r\n                  <Col span={24} style={{ padding: '1em 0',  overflow:'auto' }} className={styles.usersBox}>\r\n                        <Row justify={'space-between'} gutter={[5, 5]} wrap={true}>\r\n                              {users.map((u: UserType, id) => (\r\n                                    <Col lg={4} sm={6} xs={24} span={6} key={id}>\r\n                                          <Card hoverable style={cardStyle} styles={{ body: { padding: 0, overflow: 'hidden' } }} className={styles.card}>\r\n                                                <Flex justify='center' align='center' vertical gap={'1.5em'} style={{ padding: '2em' }}>\r\n                                                      <NavLink to={'/profile/' + u.id}>\r\n                                                            <img src={u.photos?.small || `https://icones.pro/wp-content/uploads/2021/04/icone-sourire-violet.png`} alt='MyProfile' style={imgStyle} />\r\n                                                      </NavLink>\r\n\r\n                                                      <Flex vertical align='center' justify='center'>\r\n                                                            <Typography.Title level={5}>{u.name}</Typography.Title>\r\n                                                            {u.followed ? (\r\n                                                                  <Button onClick={() => unfollowUser(u.id)} disabled={inProgress.some((i: number) => i === u.id)} type='primary'>\r\n                                                                        Unfollow\r\n                                                                  </Button>\r\n                                                            ) : (\r\n                                                                  <Button onClick={() => followUser(u.id)} disabled={inProgress.some((i: number) => i === u.id)} type='primary'>\r\n                                                                        Follow\r\n                                                                  </Button>\r\n                                                            )}\r\n                                                      </Flex>\r\n                                                </Flex>\r\n                                          </Card>\r\n                                    </Col>\r\n                              ))}\r\n                        </Row>\r\n                  </Col>\r\n            </Row>\r\n      )\r\n}\r\n\r\nexport default Users\r\n","import { useSelector } from 'react-redux'\r\nimport { ComponentType, FC } from 'react'\r\nimport { getIsFetching } from '../../selectors'\r\nimport Users from './Users'\r\nimport Loader from '../../assets/Loader'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\n\r\ntype TProps = {}\r\n\r\nconst UsersContainer: FC<TProps> = () => {\r\n      const isFetching = useSelector(getIsFetching)\r\n      return (\r\n            <>\r\n                  <Loader isFetching={isFetching} />\r\n                  <Users />\r\n            </>\r\n      )\r\n}\r\n\r\nexport default compose(withAuthRedirect)(UsersContainer)\r\n"],"names":["Search","Input","memo","props","filter","useSelector","getFilter","_jsx","Formik","enableReinitialize","initialValues","name","term","onlyFriends","String","onSubmit","values","_ref","setSubmitting","setFilterSearch","children","_ref2","handleChange","handleBlur","errors","handleSubmit","isSubmitting","_jsxs","className","styles","searchForm","searchBox","Field","type","onChange","onBlur","value","searchFormInput","Tooltip","title","Button","shape","icon","SearchOutlined","htmlType","disabled","as","cardStyle","width","imgStyle","display","useBreakpoint","Grid","users","getUsersList","overall","getOverall","pageSize","getPageSize","currentPage","getCurrentPage","inProgress","getInProgress","dispatch","useDispatch","navigate","useNavigate","setTerm","useQueryParam","StringParam","friend","setFriend","page","setPage","NumberParam","useEffect","parsedObject","actualPage","actualFilter","Number","getUsersThunk","Row","Col","span","sm","xs","Pagination","defaultCurrent","total","current","responsive","UsersSearch","style","padding","overflow","usersBox","justify","gutter","wrap","map","u","id","_u$photos","lg","Card","hoverable","body","card","Flex","align","vertical","gap","NavLink","to","src","photos","small","alt","Typography","Title","level","followed","onClick","unfollowUser","userId","unfollow","some","i","followUser","follow","compose","withAuthRedirect","UsersContainer","isFetching","getIsFetching","_Fragment","Loader","Users"],"sourceRoot":""}