{"version":3,"file":"static/js/265.9a69ca05.chunk.js","mappings":"sJACA,QAA0B,yBAA1B,EAA0D,sBAA1D,EAA2F,0BAA3F,EAAgI,0BAAhI,EAAkK,uBAAlK,EAAiM,uB,cCIjM,MAQA,EARgCA,IAEpBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYC,UACrBH,EAAAA,EAAAA,KAAA,KAAGI,KAAK,IAAGD,SAAEJ,EAAMM,S,QCFrC,MAIA,EAJgCN,IACnBC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBC,SAAEJ,EAAMO,O,2CCDnD,MAAMC,GAAUC,EAAAA,EAAAA,IAAU,IACpBC,GAAUC,EAAAA,EAAAA,IAAU,GAa1B,GAFwBC,EAAAA,EAAAA,GAAqB,CAAEC,KAAM,kBAA7BD,EATwCZ,IAEpDc,EAAAA,EAAAA,MAAA,QAAMC,SAAUf,EAAMgB,aAAaZ,SAAA,EAC7BH,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAOC,SAAU,CAACZ,EAASE,GAAUJ,KAAK,oBAC5DL,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,c,gCCC1B,MA8BA,EA9BmCJ,IAC7B,MAAMqB,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,GAAsBC,EAAAA,EAAAA,MAI5B,OACMb,EAAAA,EAAAA,MAAA,WAASZ,UAAWC,EAAeC,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC1BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SACrBiB,EAASO,KAAKC,IACT5B,EAAAA,EAAAA,KAAC6B,EAAI,CAACxB,KAAMuB,EAAEvB,MAAWuB,EAAEE,WAI7C9B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SACtBoB,EAAMI,KAAI,CAACI,EAAGD,KACT9B,EAAAA,EAAAA,KAACgC,EAAI,CAAC1B,KAAMyB,EAAEzB,MAAWwB,QAGrC9B,EAAAA,EAAAA,KAACiC,EAAe,CACVnB,SAAWoB,IAlBZA,KACXT,EAASU,EAAAA,EAAeC,WAAWF,EAASG,gBAAgB,EAkB1CC,CAAQJ,EAAS,MAGzB,ECrCtB,GAAgBK,EAAAA,EAAAA,GAAkBC,E","sources":["webpack://fried-potato/./src/css/Dialogs.module.css?a678","components/dialogs/DialogsUser.tsx","components/dialogs/DialogsModel.tsx","components/dialogs/DialogsForm.tsx","components/dialogs/Dialogs.tsx","components/dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__sGVYO\",\"item\":\"Dialogs_item__vjPzG\",\"chatTabs\":\"Dialogs_chatTabs__HLr3r\",\"contacts\":\"Dialogs_contacts__ttaqT\",\"names\":\"Dialogs_names__gLhkM\",\"chats\":\"Dialogs_chats__gxr2T\"};","import styles from '../../css/Dialogs.module.css'\r\n\r\ntype IProps = {\r\n      name: string\r\n}\r\nconst Item: React.FC<IProps> = (props) => {\r\n      return (\r\n            <li className={styles.item}>\r\n                  <a href='#'>{props.name}</a>\r\n            </li>\r\n      )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport styles from '../../css/Dialogs.module.css'\r\n\r\ntype IProps = {\r\n      text: string\r\n}\r\nconst Text: React.FC<IProps> = (props) => {\r\n      return <p className={styles.chatTabs}>{props.text}</p>\r\n}\r\n\r\nexport default Text\r\n","import { maxLength, minLength } from '../../assets/Validators'\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { Input } from '../../assets/Input'\r\nimport { IFormKeys } from './Dialogs'\r\nimport React from 'react'\r\n\r\nconst maximum = maxLength(30)\r\nconst minimum = minLength(2)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<IFormKeys>> = (props) => {\r\n      return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                  <Field component={Input} validate={[maximum, minimum]} name='AddMessageForm' />\r\n                  <button>Send</button>\r\n            </form>\r\n      )\r\n}\r\n\r\nconst AddMessageRedux = reduxForm<IFormKeys>({ form: 'AddMessageForm' })(AddMessageForm)\r\n\r\nexport default AddMessageRedux\r\n","import styles from '../../css/Dialogs.module.css'\r\nimport Item from './DialogsUser'\r\nimport Text from './DialogsModel'\r\nimport AddMessageRedux from './DialogsForm'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getContacts, getTexts } from '../../selectors'\r\nimport { IDispatch } from '../../redux/store'\r\nimport { DialogsActions } from '../../redux/dialogs-reducer'\r\ntype IProps = {}\r\nexport type IFormKeys = {\r\n      AddMessageForm: string\r\n}\r\n\r\nconst Dialogs: React.FC<IProps> = (props) => {\r\n      const contacts = useSelector(getContacts)\r\n      const texts = useSelector(getTexts)\r\n      const dispatch: IDispatch = useDispatch()\r\n      const addMail = (formData: IFormKeys) => {\r\n            dispatch(DialogsActions.addMessage(formData.AddMessageForm))\r\n      }\r\n      return (\r\n            <section className={styles.dialogs}>\r\n                  <div className={styles.contacts}>\r\n                        <ul className={styles.names}>\r\n                              {contacts.map((i) => (\r\n                                    <Item name={i.name} key={i.id} />\r\n                              ))}\r\n                        </ul>\r\n                  </div>\r\n                  <div className={styles.chats}>\r\n                        {texts.map((t, id) => (\r\n                              <Text text={t.text} key={id} />\r\n                        ))}\r\n                  </div>\r\n                  <AddMessageRedux\r\n                        onSubmit={(formData: IFormKeys) => {\r\n                              addMail(formData)\r\n                        }}\r\n                  />\r\n            </section>\r\n      )\r\n}\r\n\r\nexport default Dialogs\r\n","import { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport Dialogs from './Dialogs'\r\n\r\nexport default (withAuthRedirect)(Dialogs)\r\n"],"names":["props","_jsx","className","styles","children","href","name","text","maximum","maxLength","minimum","minLength","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Input","validate","contacts","useSelector","getContacts","texts","getTexts","dispatch","useDispatch","map","i","Item","id","t","Text","AddMessageRedux","formData","DialogsActions","addMessage","AddMessageForm","addMail","withAuthRedirect","Dialogs"],"sourceRoot":""}